@using RocketShop.Framework.Extension
@using RocketShop.SharedBlazor.Modal
@using RocketShop.SharedBlazor.Modal.ModalCompenment
@using RocketShop.SharedBlazor.SharedFunction
@using RocketShop.SharedBlazor.Tools
@using RocketShop.Warehouse.Admin.Services
@inject IHttpContextAccessor httpContextAccessor
@inject IClientServices clientServices

@code {
    Modal? e;
    LoadingModal? loading;
    string? clientId, clientName;
    bool clientIdInvalid, clientNameInvlid;
    public void Open()
    {
        e!.Show();
    }
    async Task Submit()
    {
        clientIdInvalid = clientId.IsNullOrEmpty();
        clientNameInvlid = clientName.IsNullOrEmpty();
        loading!.Open("Creating...");
        try
        {
            var clientResult = await clientServices.Create(new Database.Model.Warehouse.Authorization.Client
                {
                    ClientId = clientId!,
                    ClientName = clientName!,
                    CreateBy = httpContextAccessor.GetCurrentUserId()
                });
            if (clientResult.IsLeft)
                throw clientResult.GetLeft()!;
            var client = clientResult.GetRight()!;
            await activityLogService.Create("Warehouse Admin", "Client", $"Create Client '{clientId}'");
            await loading.Then(true, "Success", $"Client '{clientName}' Has Created", $"/client/{client.Id}");
        }
        catch
        {
            await activityLogService.Create("Warehouse Admin", "Client", $"Create Client '{clientId}' Failed");
           await loading.Then(false, "Failed", "Error While Create Client");
        }
    }

}

<Modal @ref="e" Title="Create Client">
    <ModalBody>
        <div class="form-group">
            <label for="text">Client Id</label>
            <input id="text" name="text" @bind-value="clientId" type="text" class="form-control @TextValidator.InvalidDisplay(clientIdInvalid)">
        </div>
        <div class="form-group">
            <label for="text1">Client Name</label>
            <input id="text1" name="text1" @bind-value="clientName" type="text" class="form-control @TextValidator.InvalidDisplay(clientNameInvlid)">
        </div>
    </ModalBody>
    <ModalFooter>
        <button class="btn btn-primary" @onclick="Submit"><i class="plus icon" />Create Client</button>
    </ModalFooter>
</Modal>
<LoadingModal @ref=loading />