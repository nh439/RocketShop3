@using RocketShop.Framework.Extension
@using RocketShop.SharedBlazor.Condition
@using RocketShop.SharedBlazor.Modal
@using RocketShop.SharedBlazor.Modal.ModalCompenment
@using RocketShop.Warehouse.Admin.Services
@using RocketShop.SharedBlazor.SharedBlazorService.Scope
@inject IClientServices clientServices
@inject IDialogServices dialogService
@code {
    Modal? e;
    long Id;
    public Action? AfterDeleteAction;
    bool isDeleting = false;
    string clientId = string.Empty;
    public void Open(long id, string _clientId)
    {
        Id = id;
        isDeleting = false;
        clientId = _clientId;
        e!.Show();

    }
    async Task Submit()
    {
        try
        {
            isDeleting = true;
            var result = await clientServices.Delete(Id);
            if (result.IsLeft)
                throw result.GetLeft()!;
            if (AfterDeleteAction.IsNotNull())
                AfterDeleteAction!();
            e!.Close();
        }
        catch
        {
            await dialogService.Failed("Delete Failed", "Failed");
        }
        finally
        {
            isDeleting = false;
        }
    }
}
<Modal @ref="e" Title="Delete Confirmation">
    <ModalBody>
        <h2>Are You Sure To Delete Client '@clientId'</h2>
    </ModalBody>
    <ModalFooter>
        <NHIF Condition="isDeleting">
            <NoOperation>
                <button class="btn btn-danger" @onclick="Submit">Delete Client</button>
            </NoOperation>
            <YesOperation>
                <button class="btn btn-danger" type="button" disabled>
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Deleting...
                </button>
            </YesOperation>
        </NHIF>

    </ModalFooter>
</Modal>