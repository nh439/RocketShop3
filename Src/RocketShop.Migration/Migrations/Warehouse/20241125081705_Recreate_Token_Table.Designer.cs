// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RocketShop.Database.EntityFramework;

#nullable disable

namespace RocketShop.Migration.Migrations.Warehouse
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20241125081705_Recreate_Token_Table")]
    partial class Recreate_Token_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.Authorization.AllowedObject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<long>("Client")
                        .HasColumnType("bigint");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.Property<bool>("Write")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("Client", "ObjectName");

                    b.ToTable("Authorization_Allowed_Object");
                });

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.Authorization.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Application")
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreateBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LockUntil")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MaxinumnAccess")
                        .HasColumnType("integer");

                    b.Property<bool>("RequireSecret")
                        .HasColumnType("boolean");

                    b.Property<int?>("TokenExpiration")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.HasIndex("ClientName")
                        .IsUnique();

                    b.ToTable("Authorization_Client");
                });

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.Authorization.ClientHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Key");

                    b.ToTable("Authorization_Client_History");
                });

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.Authorization.ClientSecret", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<long>("Client")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Expired")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecretValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Client");

                    b.ToTable("Authorization_Client_Secret");
                });

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.Authorization.Token", b =>
                {
                    b.Property<string>("TokenKey")
                        .HasColumnType("text");

                    b.Property<long>("Client")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("RemainingAccess")
                        .HasColumnType("integer");

                    b.Property<TimeSpan?>("TokenAge")
                        .HasColumnType("interval");

                    b.HasKey("TokenKey");

                    b.HasIndex("Client");

                    b.ToTable("Authorization_Token");
                });

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("NameTH")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameTH")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.SubDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<int>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("NameEN")
                        .HasColumnType("text");

                    b.Property<string>("NameTH")
                        .HasColumnType("text");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DistrictId");

                    b.HasIndex("PostalCode");

                    b.ToTable("SubDistricts");
                });

            modelBuilder.Entity("RocketShop.Database.Model.Warehouse.Views.AddressView", b =>
                {
                    b.Property<int>("DistrictCode")
                        .HasColumnType("integer");

                    b.Property<int>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<string>("DistrictNameEN")
                        .HasColumnType("text");

                    b.Property<string>("DistrictNameTH")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("integer");

                    b.Property<int>("ProvinceCode")
                        .HasColumnType("integer");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("integer");

                    b.Property<string>("ProvinceNameEN")
                        .HasColumnType("text");

                    b.Property<string>("ProvinceNameTH")
                        .HasColumnType("text");

                    b.Property<int>("SubDistrictId")
                        .HasColumnType("integer");

                    b.Property<string>("SubDistrictNameEN")
                        .HasColumnType("text");

                    b.Property<string>("SubDistrictNameTH")
                        .HasColumnType("text");

                    b.ToTable((string)null);

                    b.ToView("V_Address", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
